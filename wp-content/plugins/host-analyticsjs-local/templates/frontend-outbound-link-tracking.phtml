<?php
/* * * * * * * * * * * * * * * * * * * *
*  ██████╗ █████╗  ██████╗ ███████╗
* ██╔════╝██╔══██╗██╔═══██╗██╔════╝
* ██║     ███████║██║   ██║███████╗
* ██║     ██╔══██║██║   ██║╚════██║
* ╚██████╗██║  ██║╚██████╔╝███████║
*  ╚═════╝╚═╝  ╚═╝ ╚═════╝ ╚══════╝
*
* @author   : Daan van den Bergh
* @url      : https://daan.dev/wordpress-plugins/caos/
* @copyright: (c) 2021 Daan van den Bergh
* @license  : GPL2v2 or later
* * * * * * * * * * * * * * * * * * * */

/**
 * Track outbound links with Google Universal Analytics
 *
 * Thanks to Ralph Slooten: https://www.axllent.org/docs/view/track-outbound-links-with-analytics-js/
 */
?>
<script>
    function _caosLt(event) {
        if (typeof gtag !== 'function' && typeof ga !== 'function') {
            return;
        }

        var eventLink = event.srcElement || event.target;

        /* Loop up the DOM tree through parent elements if clicked element is not a link (eg: an image inside a link) */
        while (eventLink && (typeof eventLink.tagName == 'undefined' || eventLink.tagName.toLowerCase() !== 'a' || !eventLink.href)) {
            eventLink = eventLink.parentNode;
        }

        /* if a link with valid href has been clicked */
        if (eventLink && eventLink.href) {
            var link = eventLink.href;
            /* Only if it is an external link */
            if (link.indexOf(location.host) === -1 && !link.match(/^javascript\:/i)) {
                /* Is actual target set and not _(self|parent|top)? */
                var target = (eventLink.target && !eventLink.target.match(/^_(self|parent|top)$/i)) ? eventLink.target : false;
                /* Assume a target if Ctrl|shift|meta-click */
                if (event.ctrlKey || event.shiftKey || event.metaKey || event.which === 2) {
                    target = '_blank';
                }

                var hbrun = false; // tracker has not yet run

                /* HitCallback to open link in same window after tracker */
                var hitBack = function() {
                    /* run once only */
                    if (hbrun) return;
                    hbrun = true;
                    window.location.href = link;
                };

                if (target) {
                    /* If target opens a new window then just track */
                    <?php if (CAOS_OPT_REMOTE_JS_FILE == 'analytics.js') : ?>
                        ga('send', 'event', 'Outbound Link Tracking', 'click', link);
                    <?php else : ?>
                        gtag('event', 'click', {
                            'event_category': 'Outbound Link Tracking',
                            'event_label': link,
                            'value': document.location.pathname + document.location.search
                        });
                    <?php endif; ?>
                } else {
                    /* Prevent standard click, track then open */
                    event.preventDefault ? event.preventDefault() : event.returnValue = !1;
                    /* send event with callback */
                    <?php if (CAOS_OPT_REMOTE_JS_FILE == 'analytics.js') : ?>
                        ga('send', 'event', 'Outbound Link Tracking', 'click', link, {
                            'transport': 'beacon',
                            'hitCallback': hitBack
                        });
                    <?php else : ?>
                        gtag('event', 'click', {
                            'event_category': 'Outbound Link Tracking',
                            'event_label': link,
                            'value': document.location.pathname + document.location.search,
                            'transport_type': 'beacon',
                            'event_callback': hitBack
                        });
                    <?php endif; ?>
                    /* Run hitCallback again if GA takes longer than 1 second */
                    setTimeout(hitBack, 1000);
                }
            }
        }
    }

    var _window = window;

    /* Use "click" if touchscreen device, else "mousedown" */
    var _caosLtEvent = ('ontouchstart' in _window) ? 'click' : 'mousedown';

    /* Attach the event to all clicks in the document after page has loaded */
    _window.addEventListener ? _window.addEventListener('load', function() {
        document.body.addEventListener(_caosLtEvent, _caosLt, !1);
    }, !1) : _window.attachEvent && _window.attachEvent('onload', function() {
        document.body.attachEvent('on' + _caosLtEvent, _caosLt);
    });
</script>